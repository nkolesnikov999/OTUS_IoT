
# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'serial_gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import socket
import sys

from PyQt5 import QtCore, QtWidgets
from PyQt5.QtGui import QIntValidator

HOST = '127.0.0.1'  # The server's hostname or IP address
PORT = 65432        # The port used by the server

class Ui_MainWindow(object):
    # Функция установки GUI
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(500, 650)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(120, 0, 241, 21))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(140, 20, 211, 20))
        self.label_2.setObjectName("label_2")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(60, 60, 371, 141))
        self.groupBox.setTitle("")
        self.groupBox.setAlignment(QtCore.Qt.AlignCenter)
        self.groupBox.setObjectName("groupBox")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.groupBox)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(9, 1, 355, 141))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.radio_time = QtWidgets.QRadioButton(self.verticalLayoutWidget)
        self.radio_time.setChecked(True)
        self.radio_time.setObjectName("radio_time")
        self.verticalLayout.addWidget(self.radio_time)
        self.radio_in1 = QtWidgets.QRadioButton(self.verticalLayoutWidget)
        self.radio_in1.setObjectName("radio_in1")
        self.verticalLayout.addWidget(self.radio_in1)
        self.radio_in2 = QtWidgets.QRadioButton(self.verticalLayoutWidget)
        self.radio_in2.setObjectName("radio_in2")
        self.verticalLayout.addWidget(self.radio_in2)
        self.radio_in3 = QtWidgets.QRadioButton(self.verticalLayoutWidget)
        self.radio_in3.setObjectName("radio_in3")
        self.verticalLayout.addWidget(self.radio_in3)
        self.radio_in4 = QtWidgets.QRadioButton(self.verticalLayoutWidget)
        self.radio_in4.setObjectName("radio_in4")
        self.verticalLayout.addWidget(self.radio_in4)
        self.radio_temp = QtWidgets.QRadioButton(self.verticalLayoutWidget)
        self.radio_temp.setObjectName("radio_temp")
        self.verticalLayout.addWidget(self.radio_temp)
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(60, 40, 231, 20))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(150, 210, 191, 20))
        self.label_4.setObjectName("label_4")
        self.edit_charge = QtWidgets.QLineEdit(self.centralwidget)
        self.edit_charge.setGeometry(QtCore.QRect(70, 210, 61, 21))
        self.edit_charge.setObjectName("edit_charge")
        self.edit_charge.setValidator(QIntValidator(0, 100))
        self.date_time = QtWidgets.QDateTimeEdit(self.centralwidget)
        self.date_time.setGeometry(QtCore.QRect(70, 260, 194, 24))
        self.date_time.setObjectName("date_time")
        self.date_time.setDateTime(QtCore.QDateTime.currentDateTime())
        self.edit_temp = QtWidgets.QLineEdit(self.centralwidget)
        self.edit_temp.setGeometry(QtCore.QRect(70, 290, 61, 21))
        self.edit_temp.setObjectName("edit_temp")
        self.edit_temp.setValidator(QIntValidator())
        self.edit_in1 = QtWidgets.QLineEdit(self.centralwidget)
        self.edit_in1.setGeometry(QtCore.QRect(70, 320, 61, 21))
        self.edit_in1.setObjectName("edit_in1")
        self.edit_in1.setValidator(QIntValidator(0, 1000000000))
        self.edit_in2 = QtWidgets.QLineEdit(self.centralwidget)
        self.edit_in2.setGeometry(QtCore.QRect(70, 350, 61, 21))
        self.edit_in2.setObjectName("edit_in2")
        self.edit_in2.setValidator(QIntValidator(0, 1000000000))
        self.edit_in3 = QtWidgets.QLineEdit(self.centralwidget)
        self.edit_in3.setGeometry(QtCore.QRect(70, 380, 61, 21))
        self.edit_in3.setObjectName("edit_in3")
        self.edit_in3.setValidator(QIntValidator(0, 1000000000))
        self.edit_in4 = QtWidgets.QLineEdit(self.centralwidget)
        self.edit_in4.setGeometry(QtCore.QRect(70, 410, 61, 21))
        self.edit_in4.setObjectName("edit_in4")
        self.edit_in4.setValidator(QIntValidator(0, 1000000000))
        self.edit_mintemp = QtWidgets.QLineEdit(self.centralwidget)
        self.edit_mintemp.setGeometry(QtCore.QRect(70, 470, 41, 21))
        self.edit_mintemp.setObjectName("edit_mintemp")
        self.edit_mintemp.setValidator(QIntValidator(-127, 127))
        self.check_temp = QtWidgets.QCheckBox(self.centralwidget)
        self.check_temp.setGeometry(QtCore.QRect(70, 440, 401, 20))
        self.check_temp.setObjectName("check_temp")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(70, 240, 351, 20))
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(150, 290, 211, 20))
        self.label_6.setObjectName("label_6")
        self.edit_maxtemp = QtWidgets.QLineEdit(self.centralwidget)
        self.edit_maxtemp.setGeometry(QtCore.QRect(70, 500, 41, 21))
        self.edit_maxtemp.setObjectName("edit_maxtemp")
        self.edit_maxtemp.setValidator(QIntValidator(-127, 127))
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(150, 320, 221, 20))
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(150, 350, 221, 20))
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(150, 380, 221, 20))
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(self.centralwidget)
        self.label_10.setGeometry(QtCore.QRect(150, 410, 221, 20))
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(self.centralwidget)
        self.label_11.setGeometry(QtCore.QRect(120, 470, 331, 20))
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(self.centralwidget)
        self.label_12.setGeometry(QtCore.QRect(120, 500, 331, 20))
        self.label_12.setObjectName("label_12")
        self.btn_result = QtWidgets.QPushButton(self.centralwidget)
        self.btn_result.setGeometry(QtCore.QRect(180, 540, 141, 32))
        self.btn_result.setObjectName("btn_result")
        self.edit_result = QtWidgets.QLineEdit(self.centralwidget)
        self.edit_result.setGeometry(QtCore.QRect(10, 580, 480, 21))
        self.edit_result.setObjectName("edit_result")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # При нажатии кнопки Сформировать вызывается функция results
        self.btn_result.clicked.connect(self.results)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "СЧЕТЧИК ИМПУЛЬСОВ ВЕГА СИ-22"))
        self.label_2.setText(_translate("MainWindow", "Пакет с текущими показаниями"))
        self.radio_time.setText(_translate("MainWindow", "00 – Передача по времени"))
        self.radio_in1.setText(_translate("MainWindow", "01 – Сработал охранный вход 1"))
        self.radio_in2.setText(_translate("MainWindow", "02 – Сработал охранный вход 2"))
        self.radio_in3.setText(_translate("MainWindow", "03 – Сработал охранный вход 3"))
        self.radio_in4.setText(_translate("MainWindow", "04 – Сработал охранный вход 4"))
        self.radio_temp.setText(_translate("MainWindow", "05 – Температуры вышла за установленные пороги"))
        self.label_3.setText(_translate("MainWindow", "1 - Причина передачи пакета (uint8)"))
        self.label_4.setText(_translate("MainWindow", "2 - Заряд батарей, % (uint8)"))
        self.edit_charge.setPlaceholderText(_translate("MainWindow", "0"))
        self.date_time.setDisplayFormat(_translate("MainWindow", "dd.MM.yyyy HH:mm:ss"))
        self.edit_temp.setPlaceholderText(_translate("MainWindow", "0"))
        self.edit_in1.setPlaceholderText(_translate("MainWindow", "0"))
        self.edit_in2.setPlaceholderText(_translate("MainWindow", "0"))
        self.edit_in3.setPlaceholderText(_translate("MainWindow", "0"))
        self.edit_in4.setPlaceholderText(_translate("MainWindow", "0"))
        self.edit_mintemp.setPlaceholderText(_translate("MainWindow", "0"))
        self.check_temp.setText(_translate("MainWindow", "9 - Выход температуры за установленные пороги (uint8)"))
        self.label_5.setText(_translate("MainWindow", "3 - Время формирования пакета unixtime (uint32)"))
        self.label_6.setText(_translate("MainWindow", "4 - Температура, С х 10 (int16)"))
        self.edit_maxtemp.setPlaceholderText(_translate("MainWindow", "0"))
        self.label_7.setText(_translate("MainWindow", "5 - Показания на входе 1 (uint32)"))
        self.label_8.setText(_translate("MainWindow", "6 - Показания на входе 2 (uint32)"))
        self.label_9.setText(_translate("MainWindow", "7 - Показания на входе 3 (uint32)"))
        self.label_10.setText(_translate("MainWindow", "8 - Показания на входе 4 (uint32)"))
        self.label_11.setText(_translate("MainWindow", "10 - Нижний температурный порог (-127..127) (int8)"))
        self.label_12.setText(_translate("MainWindow", "11 - Верхний температурный порог (-127..127) (int8)"))
        self.btn_result.setText(_translate("MainWindow", "Сформировать"))
        self.edit_result.setPlaceholderText(_translate("MainWindow", "0"))

    # Фунеция обработки нажатия кнопки
    def results(self):
        # Считываем введенные данные и формируем байтовый массив
        reason = 0
        if self.radio_in1.isChecked():
            reason = 1
        elif self.radio_in2.isChecked():
            reason = 2
        elif self.radio_in3.isChecked():
            reason = 3
        elif self.radio_in4.isChecked():
            reason = 4
        elif self.radio_temp.isChecked():
            reason = 5
        reason_bytes = bytearray(reason.to_bytes(1, byteorder='little', signed=False))

        charge = 0
        if self.edit_charge.text() != "":
            charge = int(self.edit_charge.text())
        charge_bytes = bytearray(charge.to_bytes(1, byteorder='little', signed=False))

        time = self.date_time.dateTime().toTime_t()
        time_bytes = bytearray(time.to_bytes(4, byteorder='little', signed=False))

        temp = 0
        if self.edit_temp.text() != "":
            temp = int(self.edit_temp.text()) * 10
        temp_bytes = bytearray(temp.to_bytes(2, byteorder='little', signed=True))

        in1 = 0
        if self.edit_in1.text() != "":
            in1 = int(self.edit_in1.text())
        in1_bytes = bytearray(in1.to_bytes(4, byteorder='little', signed=False))

        in2 = 0
        if self.edit_in2.text() != "":
            in2 = int(self.edit_in2.text())
        in2_bytes = bytearray(in2.to_bytes(4, byteorder='little', signed=False))

        in3 = 0
        if self.edit_in3.text() != "":
            in3 = int(self.edit_in3.text())
        in3_bytes = bytearray(in3.to_bytes(4, byteorder='little', signed=False))

        in4 = 0
        if self.edit_in4.text() != "":
            in4 = int(self.edit_in4.text())
        in4_bytes = bytearray(in4.to_bytes(4, byteorder='little', signed=False))

        ch_temp = 0
        if self.check_temp.isChecked():
            ch_temp = 1
        chtemp_bytes = bytearray(ch_temp.to_bytes(1, byteorder='little', signed=False))

        min_temp = 0
        if self.edit_mintemp.text() != "":
            min_temp = int(self.edit_mintemp.text())
        mintemp_bytes = bytearray(min_temp.to_bytes(1, byteorder='little', signed=True))

        max_temp = 0
        if self.edit_maxtemp.text() != "":
            max_temp = int(self.edit_maxtemp.text())
        maxtemp_bytes = bytearray(max_temp.to_bytes(1, byteorder='little', signed=True))

        result_bytes = reason_bytes + charge_bytes + time_bytes + temp_bytes
        result_bytes += in1_bytes + in2_bytes + in3_bytes + in4_bytes
        result_bytes += chtemp_bytes + mintemp_bytes + maxtemp_bytes
        print(result_bytes.hex())

        print("Reason = " + str(reason))
        print("Charge = " + str(charge))
        print("Time = " + str(time))
        print("Temp = " + str(temp))
        print("In1 = " + str(in1))
        print("In2 = " + str(in2))
        print("In3 = " + str(in3))
        print("In4 = " + str(in4))
        print("Check temp = " + str(ch_temp))
        print("Min temp = " + str(min_temp))
        print("Max temp = " + str(max_temp))

        # Выводим полученный результат в текстовом окне
        self.edit_result.setText(result_bytes.hex())

        # Устанавливаем соединение и отправляем данные на сервер
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
            s.connect((HOST, PORT))
            s.sendall(result_bytes)


if __name__ == "__main__":

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

